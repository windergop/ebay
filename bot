import telebot
import requests
from bs4 import BeautifulSoup
import schedule
import time
import sqlite3

de/s-fpv/k0'

HEADERS = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) Gecko/20100101 Firefox/77.0',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Accept-Language': 'en-US,en;q=0.5',
    'Connection': 'keep-alive',
}

def get_new_ads():
    try:
        response = requests.get(URL, headers=HEADERS)
        response.raise_for_status()
        soup = BeautifulSoup(response.text, 'html.parser')
        ads = soup.find_all('article', {'class': 'aditem'})
        new_ads = []
        
        for ad in ads:
            try:
                title_elem = ad.find('a', {'class': 'ellipsis'})
                price_elem = ad.find('p', {'class': 'aditem-main--middle--price-shipping--price'})
                
                if not title_elem:
                    print(f"–ü—Ä–æ–ø—É—â–µ–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ: –Ω–µ –Ω–∞–π–¥–µ–Ω –∑–∞–≥–æ–ª–æ–≤–æ–∫")
                    continue
                    
                title = title_elem.get_text(strip=True)
                price = price_elem.get_text(strip=True) if price_elem else '–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞'
                link = 'https://www.kleinanzeigen.de' + title_elem['href']
                ad_id = link.split('/')[-1]
                
                cursor.execute('SELECT id FROM ads WHERE id = ?', (ad_id,))
                if cursor.fetchone() is None:
                    cursor.execute('INSERT INTO ads (id) VALUES (?)', (ad_id,))
                    conn.commit()
                    
                    # –£–ª—É—á—à–µ–Ω–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏
                    message = (
                        f"üìå {title}\n"
                        f"\n"
                        f"üí∞ {price}\n"
                        f"\n"
                        f"üîó {link}"
                    )
                    new_ads.append(message)
                    
            except Exception as ad_error:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è: {ad_error}")
                continue
                
        return new_ads
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ: {e}")
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"–¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {response.text[:200]}...")
        return []

def send_ads():
    try:
        new_ads = get_new_ads()
        if new_ads:
            for ad in new_ads:
                bot.send_message(CHAT_ID, ad)
        else:
            print("–ù–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–µ—Ç.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")

bot = telebot.TeleBot(TOKEN)
conn = sqlite3.connect('ads.db', check_same_thread=False)
cursor = conn.cursor()
cursor.execute('CREATE TABLE IF NOT EXISTS ads (id TEXT PRIMARY KEY)')
conn.commit()

schedule.every(3).minutes.do(send_ads)

if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    while True:
        try:
            schedule.run_pending()
            time.sleep(1)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ –≥–ª–∞–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}")
            time.sleep(5)
